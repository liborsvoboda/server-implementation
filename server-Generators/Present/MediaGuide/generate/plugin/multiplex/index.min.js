var http=require("http"),express=require("express"),fs=require("fs"),io=require("socket.io"),crypto=require("crypto"),app=express(),staticDir=express.static,server=http.createServer(app),opts,createHash;io=io(server);opts={port:process.env.PORT||1948,baseDir:__dirname+"/../../"};io.on("connection",function(n){n.on("multiplex-statechanged",function(t){typeof t.secret!="undefined"&&t.secret!=null&&t.secret!==""&&createHash(t.secret)===t.socketId&&(t.secret=null,n.broadcast.emit(t.socketId,t))})});["css","js","plugin","lib"].forEach(function(n){app.use("/"+n,staticDir(opts.baseDir+n))});app.get("/",function(n,t){t.writeHead(200,{"Content-Type":"text/html"});var i=fs.createReadStream(opts.baseDir+"/index.html");i.on("error",function(){t.write('<style>body{font-family: sans-serif;}<\/style><h2>reveal.js multiplex server.<\/h2><a href="/token">Generate token<\/a>');t.end()});i.on("readable",function(){i.pipe(t)})});app.get("/token",function(n,t){var r=(new Date).getTime(),u=Math.floor(Math.random()*9999999),i=r.toString()+u.toString();t.send({secret:i,socketId:createHash(i)})});createHash=function(n){var t=crypto.createCipher("blowfish",n);return t.final("hex")};server.listen(opts.port||null);var brown='\033[33m',green='\033[32m',reset='\033[0m';console.log(brown+"reveal.js:"+reset+" Multiplex running on port "+green+opts.port+reset);